name: Pipeline QA API Provas

on:
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:

  health_check:
    name: Health Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Testes de Health Check
        run: mvn test -Dgroups="Health-Check"
        continue-on-error: false
        id: healthcheck

      - name: Upload resultados Health Check
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

  deploy_report:
    name: Allure Report
    runs-on: ubuntu-latest
    needs: health_check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results

      - name: Install Allure CLI
        run: |
          mkdir -p /tmp/allure  # Criar um diretório temporário
          curl -o /tmp/allure/allure.tgz -L "https://github.com/allure-framework/allure2/releases/download/2.20.1/allure-2.20.1.tgz"
          tar -zxvf /tmp/allure/allure.tgz -C /tmp/allure
          sudo mv /tmp/allure/allure-2.20.1 /usr/local/bin/allure
          sudo ln -s /usr/local/bin/allure/bin/allure /usr/bin/allure

      - name: Generate Allure Report
        run: allure generate allure-results --clean -o allure-report

      - name: Deploy Allure Report and Results to GitHub Pages
        run: |
              git config user.name "github-actions"
              git config user.email "github-actions@github.com"
              git fetch origin gh-pages || git checkout -b gh-pages origin/gh-pages
              git checkout gh-pages

              # Criar diretórios separados para o allure-report e allure-results
              mkdir -p allure-report allure-results

              # Copiar os relatórios e resultados para seus respectivos diretórios
              cp -r allure-report/* allure-report/
              cp -r allure-results/* allure-results/

              git add .
              git commit -m "Deploy Allure Report and Results" || echo "No changes to commit"
              git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} gh-pages --force
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
