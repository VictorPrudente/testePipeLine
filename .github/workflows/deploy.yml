name: Pipeline Q.A API Provas

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache.outputs.cache-key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven
        id: cache
        uses: actions/cache@v4  # Atualizado para v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

  HealthCheck:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Testes de Health Check
        run: mvn test -Dgroups="Health-Check"
        continue-on-error: false
        id: healthcheck

      - name: Upload resultados Health Check
        if: always()
        uses: actions/upload-artifact@v4  # Atualizado para v4
        with:
          name: allure-results
          path: allure-results

  Contratos:
    runs-on: ubuntu-latest
    needs: HealthCheck
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Testes de Contrato
        run: mvn test -Dgroups="Contrato"
        continue-on-error: true
        id: contractcheck

      - name: Upload resultados Testes de Contrato
        if: always()
        uses: actions/upload-artifact@v4  # Atualizado para v4
        with:
          name: allure-results
          path: allure-results

  Funcionais:
    runs-on: ubuntu-latest
    needs: Contratos
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Execução Testes Funcionais
        run: mvn test -Dgroups="Funcional"
        continue-on-error: true
        id: functionaltests

      - name: Upload Functional Test Results
        if: always()
        uses: actions/upload-artifact@v4  # Atualizado para v4
        with:
          name: allure-results
          path: allure-results

  ApiReport:
    runs-on: ubuntu-latest
    needs: Funcionais
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y allure
          
      - name: Generate API Report
        run: allure generate allure-results --clean -o allure-report

      - name: Upload API Report
        if: always()
        uses: actions/upload-artifact@v4  # Atualizado para v4
        with:
          name: allure-report
          path: allure-report

  Deploy:
    runs-on: ubuntu-latest
    needs: ApiReport
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Deploy Report no GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report
