name: Relatorio de testes API Provas

on: 
  workflow_dispatch:
  push:
    branches:
      - hml
      - feat/pipeline

env:
  PIPELINE_NAME: ${{ github.workflow }}
  ALLURE_RESULTS: allure-results
  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
  REPORT_URL: ${{ secrets.REPORT_URL }}
  TAG_HEALTH_CHECK: "Health-Check"
  TAG_CONTRATO: "Contrato"
  TAG_FUNCIONAL: "Funcional"
  TAG_ACEITACAO: "Aceitacao"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      cache_key: ${{ steps.cache.outputs.cache_key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

  test-HealthCheck:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Health-Check Tests
        run: mvn test -Dgroups=${{ env.TAG_HEALTH_CHECK }} -Dallure.results.directory=${{ env.ALLURE_RESULTS }}
        continue-on-error: true

      - name: Set Health-Check Failure Status
        id: healthcheck_status
        run: |
          if [ ${{ steps.health_check.outcome }} == 'failure' ]; then
            echo "health_check_failed=true" >> $GITHUB_ENV
          else
            echo "health_check_failed=false" >> $GITHUB_ENV
          fi
        
      - name: Upload Allure reports
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-health-check
          path: ${{ env.ALLURE_RESULTS }}

  test-Contrato:
    needs: test-HealthCheck
    if: ${{ env.health_check_failed == 'false' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Verificar se Health-Check falhou
        run: |
          if [ $TEST_EXIT_CODE -ne 0 ]; then
            echo "Health-Check falhou. Interrompendo a pipeline."
            exit 1
          fi
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Contract Tests
        run: mvn test -Dgroups=${{ env.TAG_CONTRATO }} -Dallure.results.directory=${{ env.ALLURE_RESULTS }}
      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-contract
          path: ${{ env.ALLURE_RESULTS }}

  test-Funcional:
    needs: [test-HealthCheck, test-Contrato]
    runs-on: ubuntu-latest
    if: ${{ success() }} 
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Functional Tests
        run: mvn test -Dgroups=${{ env.TAG_FUNCIONAL }} -Dallure.results.directory=${{ env.ALLURE_RESULTS }}
      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-functional
          path: ${{ env.ALLURE_RESULTS }}

  test-Aceitacao:
    needs: [test-HealthCheck, test-Contrato]
    runs-on: ubuntu-latest
    if: ${{ success() }} 
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Acceptance Tests
        run: mvn test -Dgroups=${{ env.TAG_ACEITACAO }} -Dallure.results.directory=${{ env.ALLURE_RESULTS }}
      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-acceptance
          path: ${{ env.ALLURE_RESULTS }}

  report:
    runs-on: ubuntu-latest
    needs: [test-Funcional, test-Aceitacao]
    if: always() 
    steps:
      - name: Verificar se o relat칩rio Health-Check est치 presente
        id: health_check_exists
        run: |
          if curl --fail --head "${{ github.event.repository.url }}/actions/artifacts/${{ needs.test-HealthCheck.outputs.artifact_id }}/zip"; then
            echo "health_check_exists=true" >> $GITHUB_ENV
          else
            echo "health_check_exists=false" >> $GITHUB_ENV
          fi

      - name: Verificar se o relat칩rio Contract est치 presente
        id: contract_exists
        run: |
          if curl --fail --head "${{ github.event.repository.url }}/actions/artifacts/${{ needs.test-Contrato.outputs.artifact_id }}/zip"; then
            echo "contract_exists=true" >> $GITHUB_ENV
          else
            echo "contract_exists=false" >> $GITHUB_ENV
          fi

      - name: Download Allure reports from Health-Check
        if: env.health_check_exists == 'true'
        uses: actions/download-artifact@v4
        with:
          name: allure-report-health-check
          path: allure-reports/health-check

      - name: Download Allure reports from Contract
        if: env.contract_exists == 'true'
        uses: actions/download-artifact@v4
        with:
          name: allure-report-contract
          path: allure-reports/contract

      - name: Download Allure reports from Functional
        if: always() 
        uses: actions/download-artifact@v4
        with:
          name: allure-report-functional
          path: allure-reports/functional

      - name: Download Allure reports from Acceptance
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: allure-report-acceptance
          path: allure-reports/acceptance

      - name: Copy Allure Reports to allure-results
        run: |
          mkdir -p allure-results
          if [ -d "allure-reports/health-check" ]; then cp -r allure-reports/health-check/* allure-results; fi
          if [ -d "allure-reports/contract" ]; then cp -r allure-reports/contract/* allure-results; fi
          if [ -d "allure-reports/functional" ]; then cp -r allure-reports/functional/* allure-results; fi
          if [ -d "allure-reports/acceptance" ]; then cp -r allure-reports/acceptance/* allure-results; fi

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: allure-results

      - name: Edit index.html to include GitHub Run ID
        run: |
          echo "<!DOCTYPE html><meta charset=\"utf-8\"><meta http-equiv=\"refresh\" content=\"0; URL=${{secrets.REPORT_URL}}/${GITHUB_RUN_NUMBER}/index.html\">" | sudo tee allure-history/index.html > /dev/null
          echo "<meta http-equiv=\"Pragma\" content=\"no-cache\"><meta http-equiv=\"Expires\" content=\"0\">" | sudo tee -a allure-history/index.html > /dev/null
        if: always()

      - name: debug
        run: |
          cat allure-history/index.html

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

  python-test:
    runs-on: ubuntu-latest
    needs: report
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r scripts/requirements.txt

      - name: Run Python script with webhook key
        run: |
          python scripts/allure-report.py
