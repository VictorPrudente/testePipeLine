name: RelatÃ³rio de testes API Provas

on: 
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'
    - cron: '0 17 * * *'
    - cron: '0 21 * * *'

env:
  PIPELINE_NAME: ${{ github.workflow }}
  ALLURE_RESULTS: allure-results
  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
  REPORT_URL: ${{ secrets.REPORT_URL }}
  TAG_HEALTH_CHECK: "Health-Check"
  TAG_CONTRATO: "Contrato"
  TAG_FUNCIONAL: "Funcional"
  TAG_ACEITACAO: "Aceitacao"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

  test-HealthCheck:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Health-Check Tests
        run: mvn test -Dgroups=${{ env.TAG_HEALTH_CHECK }} -Dallure.results.directory=${{ env.ALLURE_RESULTS }}

      - name: Upload Allure reports
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-health-check
          path: ${{ env.ALLURE_RESULTS }}

  test-Contrato:
    needs: test-HealthCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Contract Tests
        run: mvn test -Dgroups=${{ env.TAG_CONTRATO }} -Dallure.results.directory=${{ env.ALLURE_RESULTS }}

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-contract
          path: ${{ env.ALLURE_RESULTS }}

  test-Funcional:
    needs: test-Contrato
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Functional Tests
        run: mvn test -Dgroups=${{ env.TAG_FUNCIONAL }} -Dallure.results.directory=${{ env.ALLURE_RESULTS }}

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-functional
          path: ${{ env.ALLURE_RESULTS }}

  test-Aceitacao:
    needs: test-Contrato
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Acceptance Tests
        run: mvn test -Dgroups=${{ env.TAG_ACEITACAO }} -Dallure.results.directory=${{ env.ALLURE_RESULTS }}

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-acceptance
          path: ${{ env.ALLURE_RESULTS }}

  report:
    runs-on: ubuntu-latest
    needs: [test-Funcional, test-Aceitacao]
    steps:
      - name: Download Allure reports from Health-Check
        uses: actions/download-artifact@v4
        with:
          name: allure-report-health-check
          path: allure-reports/health-check

      - name: Download Allure reports from Contract
        uses: actions/download-artifact@v4
        with:
          name: allure-report-contract
          path: allure-reports/contract

      - name: Download Allure reports from Functional
        uses: actions/download-artifact@v4
        with:
          name: allure-report-functional
          path: allure-reports/functional

      - name: Download Allure reports from Acceptance
        uses: actions/download-artifact@v4
        with:
          name: allure-report-acceptance
          path: allure-reports/acceptance

      - name: Copy Allure Reports to allure-results
        run: |
          mkdir -p allure-results
          cp -r allure-reports/health-check/* allure-results
          cp -r allure-reports/contract/* allure-results
          cp -r allure-reports/functional/* allure-results
          cp -r allure-reports/acceptance/* allure-results

      - name: Install Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      - name: Install Allure via Snap
        run: sudo snap install allure --classic
        
      - name: Start Allure Report and Ngrok Tunnel
        run: |
          nohup allure serve allure-results &  # Start Allure report server in the background
          ngrok authtoken ${{ secrets.NGROK_TOKEN }}  # Authenticate ngrok with authtoken
          nohup ngrok http 8080 > ngrok.log &  # Expose Allure on Ngrok

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history


  python-test:
    runs-on: ubuntu-latest
    needs: report
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install -r scripts/requirements.txt

    - name: Run Python script with webhook key
      run: |
        python scripts/allure-report.py
